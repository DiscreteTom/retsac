import type { ASTNode } from "./ast";

export type AcceptedParserOutput<
  ASTData,
  ErrorType,
  AllKinds extends string,
> = {
  accept: true;
  /**
   * Current AST nodes.
   */
  buffer: readonly ASTNode<ASTData, ErrorType, AllKinds>[];
  /**
   * Newly generated AST nodes by the current parsing call with error.
   * Empty list if no error generated by the current parsing call.
   */
  errors: readonly ASTNode<ASTData, ErrorType, AllKinds>[];
};

export const rejectedParserOutput = Object.freeze({ accept: false });
export type RejectedParserOutput = typeof rejectedParserOutput;

export type ParserOutput<ASTData, ErrorType, Kinds extends string> =
  | RejectedParserOutput
  | AcceptedParserOutput<ASTData, ErrorType, Kinds>;
