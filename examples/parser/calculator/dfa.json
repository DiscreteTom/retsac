{
  "data": {
    "dfa": {
      "NTs": [
        "exp"
      ],
      "entryNTs": [
        "exp"
      ],
      "grammars": [
        {
          "type": 0,
          "kind": "number",
          "name": "number",
          "str": "Grammar({ type: \"T\", kind: \"number\", name: \"number\", text: undefined })",
          "strWithName": "number",
          "strWithoutName": "number",
          "grammarStrWithName": "number",
          "grammarStrWithoutName": "number"
        },
        {
          "type": 0,
          "kind": "",
          "name": "",
          "text": "-",
          "str": "Grammar({ type: \"T\", kind: \"\", name: \"\", text: \"-\" })",
          "strWithName": "<anonymous>: \"-\"",
          "strWithoutName": "<anonymous>: \"-\"",
          "grammarStrWithName": "\"-\"",
          "grammarStrWithoutName": "\"-\""
        },
        {
          "type": 1,
          "kind": "exp",
          "name": "exp",
          "str": "Grammar({ type: \"NT\", kind: \"exp\", name: \"exp\", text: undefined })",
          "strWithName": "exp",
          "strWithoutName": "exp",
          "grammarStrWithName": "exp",
          "grammarStrWithoutName": "exp"
        },
        {
          "type": 0,
          "kind": "",
          "name": "",
          "text": "(",
          "str": "Grammar({ type: \"T\", kind: \"\", name: \"\", text: \"(\" })",
          "strWithName": "<anonymous>: \"(\"",
          "strWithoutName": "<anonymous>: \"(\"",
          "grammarStrWithName": "\"(\"",
          "grammarStrWithoutName": "\"(\""
        },
        {
          "type": 0,
          "kind": "",
          "name": "",
          "text": ")",
          "str": "Grammar({ type: \"T\", kind: \"\", name: \"\", text: \")\" })",
          "strWithName": "<anonymous>: \")\"",
          "strWithoutName": "<anonymous>: \")\"",
          "grammarStrWithName": "\")\"",
          "grammarStrWithoutName": "\")\""
        },
        {
          "type": 0,
          "kind": "",
          "name": "",
          "text": "+",
          "str": "Grammar({ type: \"T\", kind: \"\", name: \"\", text: \"+\" })",
          "strWithName": "<anonymous>: \"+\"",
          "strWithoutName": "<anonymous>: \"+\"",
          "grammarStrWithName": "\"+\"",
          "grammarStrWithoutName": "\"+\""
        },
        {
          "type": 0,
          "kind": "",
          "name": "",
          "text": "*",
          "str": "Grammar({ type: \"T\", kind: \"\", name: \"\", text: \"*\" })",
          "strWithName": "<anonymous>: \"*\"",
          "strWithoutName": "<anonymous>: \"*\"",
          "grammarStrWithName": "\"*\"",
          "grammarStrWithoutName": "\"*\""
        },
        {
          "type": 0,
          "kind": "",
          "name": "",
          "text": "/",
          "str": "Grammar({ type: \"T\", kind: \"\", name: \"\", text: \"/\" })",
          "strWithName": "<anonymous>: \"/\"",
          "strWithoutName": "<anonymous>: \"/\"",
          "grammarStrWithName": "\"/\"",
          "grammarStrWithoutName": "\"/\""
        }
      ],
      "grammarRules": [
        {
          "NT": "exp",
          "rule": [
            "number"
          ],
          "conflicts": [],
          "resolved": [],
          "str": "{ exp: `number` }",
          "strWithGrammarName": "{ exp: `number` }",
          "strWithoutGrammarName": "{ exp: `number` }",
          "hydrationId": 0
        },
        {
          "NT": "exp",
          "rule": [
            "\"-\"",
            "exp"
          ],
          "conflicts": [
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "next": [
                "\"+\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                4
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "next": [
                "\"-\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                6
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "next": [
                "\"*\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                0
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "next": [
                "\"/\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                2
              ]
            }
          ],
          "resolved": [
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            }
          ],
          "str": "{ exp: `\"-\" exp` }",
          "strWithGrammarName": "{ exp: `\"-\" exp` }",
          "strWithoutGrammarName": "{ exp: `\"-\" exp` }",
          "hydrationId": 1
        },
        {
          "NT": "exp",
          "rule": [
            "\"(\"",
            "exp",
            "\")\""
          ],
          "conflicts": [],
          "resolved": [],
          "str": "{ exp: `\"(\" exp \")\"` }",
          "strWithGrammarName": "{ exp: `\"(\" exp \")\"` }",
          "strWithoutGrammarName": "{ exp: `\"(\" exp \")\"` }",
          "hydrationId": 2
        },
        {
          "NT": "exp",
          "rule": [
            "exp",
            "\"+\"",
            "exp"
          ],
          "conflicts": [
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "next": [
                "\"+\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                6
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "next": [
                "\"-\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                7,
                9
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "next": [
                "\"*\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                2
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "next": [
                "\"/\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                4
              ]
            }
          ],
          "resolved": [
            {
              "type": 0,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            }
          ],
          "str": "{ exp: `exp \"+\" exp` }",
          "strWithGrammarName": "{ exp: `exp \"+\" exp` }",
          "strWithoutGrammarName": "{ exp: `exp \"+\" exp` }",
          "hydrationId": 3
        },
        {
          "NT": "exp",
          "rule": [
            "exp",
            "\"-\"",
            "exp"
          ],
          "conflicts": [
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "next": [
                "\"+\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                6,
                8
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "next": [
                "\"-\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                10
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "next": [
                "\"*\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                2
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "next": [
                "\"/\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                4
              ]
            }
          ],
          "resolved": [
            {
              "type": 0,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            }
          ],
          "str": "{ exp: `exp \"-\" exp` }",
          "strWithGrammarName": "{ exp: `exp \"-\" exp` }",
          "strWithoutGrammarName": "{ exp: `exp \"-\" exp` }",
          "hydrationId": 4
        },
        {
          "NT": "exp",
          "rule": [
            "exp",
            "\"*\"",
            "exp"
          ],
          "conflicts": [
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "next": [
                "\"+\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                2
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "next": [
                "\"-\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                4
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "next": [
                "\"*\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                6
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "next": [
                "\"/\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                7,
                9
              ]
            }
          ],
          "resolved": [
            {
              "type": 0,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            }
          ],
          "str": "{ exp: `exp \"*\" exp` }",
          "strWithGrammarName": "{ exp: `exp \"*\" exp` }",
          "strWithoutGrammarName": "{ exp: `exp \"*\" exp` }",
          "hydrationId": 5
        },
        {
          "NT": "exp",
          "rule": [
            "exp",
            "\"/\"",
            "exp"
          ],
          "conflicts": [
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "next": [
                "\"+\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                2
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "next": [
                "\"-\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                4
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "next": [
                "\"*\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                6,
                8
              ]
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "next": [
                "\"/\""
              ],
              "handleEnd": false,
              "overlapped": 1,
              "resolvers": [
                10
              ]
            }
          ],
          "resolved": [
            {
              "type": 0,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": false
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `\"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": false
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"+\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"-\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            },
            {
              "type": 1,
              "anotherRule": "{ exp: `exp \"*\" exp` }",
              "handleEnd": true,
              "next": "*",
              "accepter": true
            },
            {
              "type": 0,
              "anotherRule": "{ exp: `exp \"/\" exp` }",
              "handleEnd": false,
              "next": "*",
              "accepter": true
            }
          ],
          "str": "{ exp: `exp \"/\" exp` }",
          "strWithGrammarName": "{ exp: `exp \"/\" exp` }",
          "strWithoutGrammarName": "{ exp: `exp \"/\" exp` }",
          "hydrationId": 6
        }
      ],
      "candidates": [
        {
          "gr": "{ exp: `number` }",
          "digested": 0,
          "nextMap": {
            "number": "exp := number #"
          },
          "str": "exp := # number",
          "strWithGrammarName": "exp := # number"
        },
        {
          "gr": "{ exp: `\"-\" exp` }",
          "digested": 0,
          "nextMap": {
            "\"-\"": "exp := \"-\" # exp"
          },
          "str": "exp := # \"-\" exp",
          "strWithGrammarName": "exp := # \"-\" exp"
        },
        {
          "gr": "{ exp: `\"(\" exp \")\"` }",
          "digested": 0,
          "nextMap": {
            "\"(\"": "exp := \"(\" # exp \")\""
          },
          "str": "exp := # \"(\" exp \")\"",
          "strWithGrammarName": "exp := # \"(\" exp \")\""
        },
        {
          "gr": "{ exp: `exp \"+\" exp` }",
          "digested": 0,
          "nextMap": {
            "exp": "exp := exp # \"+\" exp"
          },
          "str": "exp := # exp \"+\" exp",
          "strWithGrammarName": "exp := # exp \"+\" exp"
        },
        {
          "gr": "{ exp: `exp \"-\" exp` }",
          "digested": 0,
          "nextMap": {
            "exp": "exp := exp # \"-\" exp"
          },
          "str": "exp := # exp \"-\" exp",
          "strWithGrammarName": "exp := # exp \"-\" exp"
        },
        {
          "gr": "{ exp: `exp \"*\" exp` }",
          "digested": 0,
          "nextMap": {
            "exp": "exp := exp # \"*\" exp"
          },
          "str": "exp := # exp \"*\" exp",
          "strWithGrammarName": "exp := # exp \"*\" exp"
        },
        {
          "gr": "{ exp: `exp \"/\" exp` }",
          "digested": 0,
          "nextMap": {
            "exp": "exp := exp # \"/\" exp"
          },
          "str": "exp := # exp \"/\" exp",
          "strWithGrammarName": "exp := # exp \"/\" exp"
        },
        {
          "gr": "{ exp: `number` }",
          "digested": 1,
          "nextMap": {},
          "str": "exp := number #",
          "strWithGrammarName": "exp := number #"
        },
        {
          "gr": "{ exp: `\"-\" exp` }",
          "digested": 1,
          "nextMap": {
            "exp": "exp := \"-\" exp #"
          },
          "str": "exp := \"-\" # exp",
          "strWithGrammarName": "exp := \"-\" # exp"
        },
        {
          "gr": "{ exp: `exp \"+\" exp` }",
          "digested": 1,
          "nextMap": {
            "\"+\"": "exp := exp \"+\" # exp"
          },
          "str": "exp := exp # \"+\" exp",
          "strWithGrammarName": "exp := exp # \"+\" exp"
        },
        {
          "gr": "{ exp: `exp \"-\" exp` }",
          "digested": 1,
          "nextMap": {
            "\"-\"": "exp := exp \"-\" # exp"
          },
          "str": "exp := exp # \"-\" exp",
          "strWithGrammarName": "exp := exp # \"-\" exp"
        },
        {
          "gr": "{ exp: `exp \"*\" exp` }",
          "digested": 1,
          "nextMap": {
            "\"*\"": "exp := exp \"*\" # exp"
          },
          "str": "exp := exp # \"*\" exp",
          "strWithGrammarName": "exp := exp # \"*\" exp"
        },
        {
          "gr": "{ exp: `exp \"/\" exp` }",
          "digested": 1,
          "nextMap": {
            "\"/\"": "exp := exp \"/\" # exp"
          },
          "str": "exp := exp # \"/\" exp",
          "strWithGrammarName": "exp := exp # \"/\" exp"
        },
        {
          "gr": "{ exp: `\"(\" exp \")\"` }",
          "digested": 1,
          "nextMap": {
            "exp": "exp := \"(\" exp # \")\""
          },
          "str": "exp := \"(\" # exp \")\"",
          "strWithGrammarName": "exp := \"(\" # exp \")\""
        },
        {
          "gr": "{ exp: `\"-\" exp` }",
          "digested": 2,
          "nextMap": {},
          "str": "exp := \"-\" exp #",
          "strWithGrammarName": "exp := \"-\" exp #"
        },
        {
          "gr": "{ exp: `exp \"-\" exp` }",
          "digested": 2,
          "nextMap": {
            "exp": "exp := exp \"-\" exp #"
          },
          "str": "exp := exp \"-\" # exp",
          "strWithGrammarName": "exp := exp \"-\" # exp"
        },
        {
          "gr": "{ exp: `exp \"+\" exp` }",
          "digested": 2,
          "nextMap": {
            "exp": "exp := exp \"+\" exp #"
          },
          "str": "exp := exp \"+\" # exp",
          "strWithGrammarName": "exp := exp \"+\" # exp"
        },
        {
          "gr": "{ exp: `exp \"*\" exp` }",
          "digested": 2,
          "nextMap": {
            "exp": "exp := exp \"*\" exp #"
          },
          "str": "exp := exp \"*\" # exp",
          "strWithGrammarName": "exp := exp \"*\" # exp"
        },
        {
          "gr": "{ exp: `exp \"/\" exp` }",
          "digested": 2,
          "nextMap": {
            "exp": "exp := exp \"/\" exp #"
          },
          "str": "exp := exp \"/\" # exp",
          "strWithGrammarName": "exp := exp \"/\" # exp"
        },
        {
          "gr": "{ exp: `\"(\" exp \")\"` }",
          "digested": 2,
          "nextMap": {
            "\")\"": "exp := \"(\" exp \")\" #"
          },
          "str": "exp := \"(\" exp # \")\"",
          "strWithGrammarName": "exp := \"(\" exp # \")\""
        },
        {
          "gr": "{ exp: `exp \"-\" exp` }",
          "digested": 3,
          "nextMap": {},
          "str": "exp := exp \"-\" exp #",
          "strWithGrammarName": "exp := exp \"-\" exp #"
        },
        {
          "gr": "{ exp: `exp \"+\" exp` }",
          "digested": 3,
          "nextMap": {},
          "str": "exp := exp \"+\" exp #",
          "strWithGrammarName": "exp := exp \"+\" exp #"
        },
        {
          "gr": "{ exp: `exp \"*\" exp` }",
          "digested": 3,
          "nextMap": {},
          "str": "exp := exp \"*\" exp #",
          "strWithGrammarName": "exp := exp \"*\" exp #"
        },
        {
          "gr": "{ exp: `exp \"/\" exp` }",
          "digested": 3,
          "nextMap": {},
          "str": "exp := exp \"/\" exp #",
          "strWithGrammarName": "exp := exp \"/\" exp #"
        },
        {
          "gr": "{ exp: `\"(\" exp \")\"` }",
          "digested": 3,
          "nextMap": {},
          "str": "exp := \"(\" exp \")\" #",
          "strWithGrammarName": "exp := \"(\" exp \")\" #"
        }
      ],
      "states": {
        "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number": {
          "candidates": [
            "exp := # number",
            "exp := # \"-\" exp",
            "exp := # \"(\" exp \")\"",
            "exp := # exp \"+\" exp",
            "exp := # exp \"-\" exp",
            "exp := # exp \"*\" exp",
            "exp := # exp \"/\" exp"
          ],
          "nextMap": {
            "number": "exp := number #",
            "\"-\"": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "exp": "exp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp",
            "\"(\"": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number"
        },
        "exp := number #": {
          "candidates": [
            "exp := number #"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": null,
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := number #"
        },
        "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number": {
          "candidates": [
            "exp := \"-\" # exp",
            "exp := # number",
            "exp := # \"-\" exp",
            "exp := # \"(\" exp \")\"",
            "exp := # exp \"+\" exp",
            "exp := # exp \"-\" exp",
            "exp := # exp \"*\" exp",
            "exp := # exp \"/\" exp"
          ],
          "nextMap": {
            "number": "exp := number #",
            "\"-\"": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "exp": "exp := \"-\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp",
            "\"(\"": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number"
        },
        "exp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp": {
          "candidates": [
            "exp := exp # \"+\" exp",
            "exp := exp # \"-\" exp",
            "exp := exp # \"*\" exp",
            "exp := exp # \"/\" exp"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp",
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp",
            "\"*\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp",
            "\"/\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
          },
          "str": "exp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp"
        },
        "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number": {
          "candidates": [
            "exp := \"(\" # exp \")\"",
            "exp := # number",
            "exp := # \"-\" exp",
            "exp := # \"(\" exp \")\"",
            "exp := # exp \"+\" exp",
            "exp := # exp \"-\" exp",
            "exp := # exp \"*\" exp",
            "exp := # exp \"/\" exp"
          ],
          "nextMap": {
            "number": "exp := number #",
            "\"-\"": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "exp": "exp := \"(\" exp # \")\"\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp",
            "\"(\"": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number"
        },
        "exp := \"-\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp": {
          "candidates": [
            "exp := \"-\" exp #",
            "exp := exp # \"+\" exp",
            "exp := exp # \"-\" exp",
            "exp := exp # \"*\" exp",
            "exp := exp # \"/\" exp"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp",
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp",
            "\"*\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp",
            "\"/\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
          },
          "str": "exp := \"-\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp"
        },
        "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp": {
          "candidates": [
            "exp := exp \"-\" # exp",
            "exp := # number",
            "exp := # \"-\" exp",
            "exp := # \"(\" exp \")\"",
            "exp := # exp \"+\" exp",
            "exp := # exp \"-\" exp",
            "exp := # exp \"*\" exp",
            "exp := # exp \"/\" exp"
          ],
          "nextMap": {
            "number": "exp := number #",
            "\"-\"": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "exp": "exp := exp \"-\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp",
            "\"(\"": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp"
        },
        "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp": {
          "candidates": [
            "exp := exp \"+\" # exp",
            "exp := # number",
            "exp := # \"-\" exp",
            "exp := # \"(\" exp \")\"",
            "exp := # exp \"+\" exp",
            "exp := # exp \"-\" exp",
            "exp := # exp \"*\" exp",
            "exp := # exp \"/\" exp"
          ],
          "nextMap": {
            "number": "exp := number #",
            "\"-\"": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "exp": "exp := exp \"+\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp",
            "\"(\"": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp"
        },
        "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp": {
          "candidates": [
            "exp := exp \"*\" # exp",
            "exp := # number",
            "exp := # \"-\" exp",
            "exp := # \"(\" exp \")\"",
            "exp := # exp \"+\" exp",
            "exp := # exp \"-\" exp",
            "exp := # exp \"*\" exp",
            "exp := # exp \"/\" exp"
          ],
          "nextMap": {
            "number": "exp := number #",
            "\"-\"": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "exp": "exp := exp \"*\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp",
            "\"(\"": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp"
        },
        "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp": {
          "candidates": [
            "exp := exp \"/\" # exp",
            "exp := # number",
            "exp := # \"-\" exp",
            "exp := # \"(\" exp \")\"",
            "exp := # exp \"+\" exp",
            "exp := # exp \"-\" exp",
            "exp := # exp \"*\" exp",
            "exp := # exp \"/\" exp"
          ],
          "nextMap": {
            "number": "exp := number #",
            "\"-\"": "exp := \"-\" # exp\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "exp": "exp := exp \"/\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp",
            "\"(\"": "exp := \"(\" # exp \")\"\nexp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
        },
        "exp := \"(\" exp # \")\"\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp": {
          "candidates": [
            "exp := \"(\" exp # \")\"",
            "exp := exp # \"+\" exp",
            "exp := exp # \"-\" exp",
            "exp := exp # \"*\" exp",
            "exp := exp # \"/\" exp"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp",
            "exp": null,
            "\"(\"": null,
            "\")\"": "exp := \"(\" exp \")\" #",
            "\"+\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp",
            "\"*\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp",
            "\"/\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
          },
          "str": "exp := \"(\" exp # \")\"\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp"
        },
        "exp := exp \"-\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp": {
          "candidates": [
            "exp := exp \"-\" exp #",
            "exp := exp # \"+\" exp",
            "exp := exp # \"-\" exp",
            "exp := exp # \"*\" exp",
            "exp := exp # \"/\" exp"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp",
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp",
            "\"*\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp",
            "\"/\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
          },
          "str": "exp := exp \"-\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp"
        },
        "exp := exp \"+\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp": {
          "candidates": [
            "exp := exp \"+\" exp #",
            "exp := exp # \"+\" exp",
            "exp := exp # \"-\" exp",
            "exp := exp # \"*\" exp",
            "exp := exp # \"/\" exp"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp",
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp",
            "\"*\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp",
            "\"/\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
          },
          "str": "exp := exp \"+\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp"
        },
        "exp := exp \"*\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp": {
          "candidates": [
            "exp := exp \"*\" exp #",
            "exp := exp # \"+\" exp",
            "exp := exp # \"-\" exp",
            "exp := exp # \"*\" exp",
            "exp := exp # \"/\" exp"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp",
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp",
            "\"*\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp",
            "\"/\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
          },
          "str": "exp := exp \"*\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp"
        },
        "exp := exp \"/\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp": {
          "candidates": [
            "exp := exp \"/\" exp #",
            "exp := exp # \"+\" exp",
            "exp := exp # \"-\" exp",
            "exp := exp # \"*\" exp",
            "exp := exp # \"/\" exp"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"-\" # exp",
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"+\" # exp",
            "\"*\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"*\" # exp",
            "\"/\"": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number\nexp := exp \"/\" # exp"
          },
          "str": "exp := exp \"/\" exp #\nexp := exp # \"*\" exp\nexp := exp # \"+\" exp\nexp := exp # \"-\" exp\nexp := exp # \"/\" exp"
        },
        "exp := \"(\" exp \")\" #": {
          "candidates": [
            "exp := \"(\" exp \")\" #"
          ],
          "nextMap": {
            "number": null,
            "\"-\"": null,
            "exp": null,
            "\"(\"": null,
            "\")\"": null,
            "\"+\"": null,
            "\"*\"": null,
            "\"/\"": null
          },
          "str": "exp := \"(\" exp \")\" #"
        }
      },
      "entryState": "exp := # \"(\" exp \")\"\nexp := # \"-\" exp\nexp := # exp \"*\" exp\nexp := # exp \"+\" exp\nexp := # exp \"-\" exp\nexp := # exp \"/\" exp\nexp := # number",
      "NTClosures": {
        "exp": [
          "{ exp: `number` }",
          "{ exp: `\"-\" exp` }",
          "{ exp: `\"(\" exp \")\"` }",
          "{ exp: `exp \"+\" exp` }",
          "{ exp: `exp \"-\" exp` }",
          "{ exp: `exp \"*\" exp` }",
          "{ exp: `exp \"/\" exp` }"
        ]
      },
      "firstSets": {
        "exp": [
          "number",
          "\"-\"",
          "\"(\"",
          "exp"
        ]
      },
      "followSets": {
        "exp": [
          "\")\"",
          "\"+\"",
          "\"-\"",
          "\"*\"",
          "\"/\"",
          "exp",
          "number",
          "\"(\""
        ],
        "number": [
          "\")\"",
          "\"+\"",
          "\"-\"",
          "\"*\"",
          "\"/\"",
          "exp",
          "number",
          "\"(\""
        ],
        "": [
          "exp",
          "number",
          "\"-\"",
          "\"(\"",
          "\")\"",
          "\"+\"",
          "\"*\"",
          "\"/\""
        ]
      }
    }
  }
}